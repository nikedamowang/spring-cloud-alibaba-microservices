### 智能配置管理系统 API 测试
### 基础地址: http://localhost:9090/api/intelligent-config

### 1. 动态配置热更新
POST http://localhost:9090/api/intelligent-config/hot-update?dataId=user-service.properties&operator=admin&
    changeDescription=优化数据库连接池配置
Content-Type: text/plain

# 用户服务配置 - 智能配置管理升级版
spring.application.name=user-service
server.port=9000

# 数据库配置（优化连接池）
spring.datasource.url=jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# 连接池配置（优化版）
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# Dubbo配置
dubbo.application.name=user-service
dubbo.registry.address=nacos://127.0.0.1:8848
dubbo.protocol.name=dubbo
dubbo.protocol.port=20881

###

### 2. 配置版本回滚
POST http://localhost:9090/api/intelligent-config/rollback?dataId=user-service.properties&targetVersion=1&operator=admin

###

### 3. 获取配置版本历史
GET http://localhost:9090/api/intelligent-config/version-history?dataId=user-service.properties&limit=5

###

### 4. 配置版本差异对比
GET http://localhost:9090/api/intelligent-config/compare-versions?dataId=user-service.properties&version1=1&version2=2

###

### 5. 环境配置差异对比
GET http://localhost:9090/api/intelligent-config/compare-environments?dataId=user-service.properties&env1=dev&env2=prod

###

### 6. 查询配置变更审计日志
GET http://localhost:9090/api/intelligent-config/audit-logs?dataId=user-service.properties&operator=admin

###

### 7. 配置语法验证
POST http://localhost:9090/api/intelligent-config/validate-syntax?configType=properties
Content-Type: text/plain

spring.application.name=test-service
server.port=8080
spring.datasource.url=jdbc:mysql://localhost:3306/test

###

### 8. 配置影响分析
POST http://localhost:9090/api/intelligent-config/analyze-impact?dataId=user-service.properties
Content-Type: text/plain

spring.application.name=user-service
server.port=9001
spring.datasource.url=jdbc:mysql://localhost:3306/demo_new

###

### 9. 创建配置模板
POST http://localhost:9090/api/intelligent-config/templates
Content-Type: application/json

{
  "templateName": "新微服务标准模板",
  "templateType": "SERVICE",
  "templateDescription": "新微服务的标准配置模板",
  "templateContent": "spring.application.name=${serviceName}\nserver.port=${serverPort}\nspring.datasource.url=jdbc:mysql://localhost:3306/${database}",
  "templateVariables": "{\"serviceName\": \"服务名称\", \"serverPort\": \"服务端口\", \"database\": \"数据库名\"}",
  "environment": "ALL",
  "templateVersion": "1.0",
  "isEnabled": true,
  "creator": "admin",
  "tags": "microservice,standard"
}

###

### 10. 获取配置模板列表
GET http://localhost:9090/api/intelligent-config/templates?templateType=SERVICE

###

### 11. 基于模板创建配置
POST http://localhost:9090/api/intelligent-config/create-from-template?templateId=1&dataId=new-service.properties&
    operator=admin
Content-Type: application/json

{
  "serviceName": "payment-service",
  "serverPort": "8050",
  "database": "payment_db"
}

###

### 12. 配置管理仪表板
GET http://localhost:9090/api/intelligent-config/dashboard

###

### 13. 测试配置热更新（订单服务）
POST http://localhost:9090/api/intelligent-config/hot-update?dataId=order-service.properties&operator=admin&
    changeDescription=添加新的业务配置
Content-Type: text/plain

# 订单服务配置 - 智能配置管理版
spring.application.name=order-service
server.port=8000

# 数据库配置
spring.datasource.url=jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=123456

# 新增业务配置
order.payment.timeout=300000
order.inventory.check.enabled=true
order.notification.enabled=true

###

### 14. 测试网关配置管理
POST http://localhost:9090/api/intelligent-config/hot-update?dataId=gateway-service.properties&operator=admin&
    changeDescription=优化网关路由配置
Content-Type: text/plain

spring.application.name=gateway-service
server.port=8080

# 路由配置优化
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/user/**

spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/order/**

# 新增管理服务路由
spring.cloud.gateway.routes[2].id=management-service
spring.cloud.gateway.routes[2].uri=lb://management-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/**

###
